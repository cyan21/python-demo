# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
- job: azure_python_webapp
#   steps:
#   - task: ArtifactoryPip@1
#     inputs:
#       artifactoryService: 'yann_swampup'
#       command: 'install'
#       arguments: '-r src/requirements.txt --no-cache-dir'
#       targetResolveRepo: 'urs-python'
#       collectBuildInfo: true
#       buildName: '$(Build.DefinitionName)'
#       buildNumber: '$(Build.BuildNumber)'
#       noPipCache: true
#     displayName: 'Download dependencies'

#   - script: tar -czvf webapp_python_azure.tar.gz src/*.yaml src/*.txt src/*.py
#     displayName: 'Package webapp'
    
#   - task: ArtifactoryGenericUpload@2
#     inputs:
#       artifactoryService: 'yann_swampup'
#       specSource: 'taskConfiguration'
#       fileSpec: |
#         {
#           "files": [
#             {
#               "pattern": "webapp_python_azure.tar.gz",
#               "target": "urs-generic/"
#             }
#           ]
#         }
#       collectBuildInfo: true
#       buildName: '$(Build.DefinitionName)'
#       buildNumber: '$(Build.BuildNumber)'
#       failNoOp: true
#     displayName: 'Upload webapp'

#   - task: ArtifactoryPublishBuildInfo@1
#     inputs:
#       artifactoryService: 'yann_swampup'
#       buildName: '$(Build.DefinitionName)'
#       buildNumber: '$(Build.BuildNumber)'
#     displayName: 'Publish Build Info'

#   - task: ArtifactoryXrayScan@1
#     inputs:
#       artifactoryService: 'yann_swampup'
#       buildName: '$(Build.DefinitionName)'
#       buildNumber: '$(Build.BuildNumber)'
#       allowFailBuild: true
#     displayName: 'Scan Build Info'

- job: azure_docker
  steps:
  - task: DockerInstaller@0
    inputs:
      dockerVersion: '17.09.0-ce'
    displayName: 'Install Docker'
  - task: ArtifactoryGenericDownload@3
    inputs:
      connection: 'yann_swampup'
      specSource: 'taskConfiguration'
      fileSpec: |
        {
          "files": [
            {
              "pattern": "urs-generic/webapp_python_azure.tar.gz",
              "target": "src/webapp_python.tar.gz"
            }
          ]
        }
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      failNoOp: true
    displayName: 'Download webapp'

  - script: |
      docker images
      ls -l src
    displayName: 'Check up '

  - task: Docker@2
    inputs:
      containerRegistry: 'yann_swampup_docker'
      repository: 'urs-docker'
      command: 'build'
      Dockerfile: 'src/Dockerfile'
      arguments: '--build-arg RT_TOKEN=AP5hFq3BfqJMjUsZDJ2yFrKt3aR'
    displayName: 'Build Docker image'

  - task: ArtifactoryDocker@1
    inputs:
      command: 'push'
      artifactoryService: 'yann_swampup'
      targetRepo: 'urs-docker'
      imageName: 'azure-python-webapp:1.0.0'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
    displayName: 'Push Docker image'

  - task: ArtifactoryPublishBuildInfo@1
    inputs:
      artifactoryService: 'yann_swampup'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
    displayName: 'Publish Build Info'


